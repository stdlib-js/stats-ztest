// Copyright (c) 2023 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import{isPrimitive as s}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-number@v0.1.1-esm/index.mjs";import{primitives as t}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number-array@v0.1.0-esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-typed-array-like@v0.1.0-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-read-only-property@v0.1.1-esm/index.mjs";import{factory as r}from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-normal-cdf@v0.1.0-esm/index.mjs";import{factory as n}from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-normal-quantile@v0.1.1-esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/error-tools-fmtprodmsg@v0.1.1-esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-sqrt@v0.1.1-esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-abs@v0.1.1-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-mean@v0.1.0-esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/constants-float64-ninf@v0.1.1-esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/constants-float64-pinf@v0.1.1-esm/index.mjs";import{isPrimitive as p}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number@v0.1.1-esm/index.mjs";import v from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.1.0-esm/index.mjs";import{isPrimitive as j}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-string@v0.1.1-esm/index.mjs";import c from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nan@v0.1.1-esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.1.1-esm/index.mjs";import g from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-integer@v0.1.0-esm/index.mjs";import{isPrimitive as b}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@v0.1.1-esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-roundn@v0.1.0-esm/index.mjs";function w(s){var t,e,i;if(e=4,t=!0,arguments.length>0){if(!v(s))throw new TypeError(a("1Lz3L,Gc",s));if(f(s,"digits")){if(!g(s.digits))throw new TypeError(a("1Lz3P,Fv","digits",s.digits));e=s.digits}if(f(s,"decision")){if(!b(s.decision))throw new TypeError(a("1Lz2o,GE","decision",s.decision));t=s.decision}}switch(i="",i+=this.method,i+="\n\n",i+="Alternative hypothesis: ",i+="True mean is ",this.alternative){case"less":i+="less than ";break;case"greater":i+="greater than ";break;default:i+="not equal to "}return i+=this.nullValue,i+="\n\n",i+="    pValue: "+u(this.pValue,-e)+"\n",i+="    statistic: "+u(this.statistic,-e)+"\n",i+="    "+100*(1-this.alpha)+"% confidence interval: ["+u(this.ci[0],-e)+","+u(this.ci[1],-e)+"]",i+="\n\n",t&&(i+="Test Decision: ",this.rejected?i+="Reject null in favor of alternative at "+100*this.alpha+"% significance level":i+="Fail to reject null in favor of alternative at "+100*this.alpha+"% significance level",i+="\n"),i}var x=r(0,1),y=n(0,1);function z(r,n,g){var b,u,z,E,L,G,T,V,k,P,q;if(!e(r)&&!t(r))throw new TypeError(a("1Lz8R,GO",r));if(!s(n))throw new TypeError(a("1Lz72,Go",n));if(P=r.length,L={},g&&(V=function(s,t){return v(t)?f(t,"alpha")&&(s.alpha=t.alpha,!p(s.alpha)||c(s.alpha))?new TypeError(a("1Lz8P,GU","alpha",s.alpha)):f(t,"alternative")&&(s.alternative=t.alternative,!j(s.alternative))?new TypeError(a("1Lz2W,Gh","alternative",s.alternative)):f(t,"mu")&&(s.mu=t.mu,!p(s.mu)||c(s.mu))?new TypeError(a("1Lz8P,GU","mu",s.mu)):null:new TypeError(a("1Lz2V,FD",t))}(L,g),V))throw V;if(q=L.mu||0,(u=void 0===L.alpha?.05:L.alpha)<0||u>1)throw new RangeError(a("1Lz8V,Gb","alpha",u));if(P<2)throw new Error(a("1Lz8S,A2,Gl,Gp",r));switch(b=d(n*n/P),G=(o(P,r,1)-q)/b,T=L.alternative||"two-sided"){case"two-sided":E=2*x(-l(G)),(z=[G-y(1-u/2),G+y(1-u/2)])[0]=q+z[0]*b,z[1]=q+z[1]*b;break;case"greater":E=1-x(G),(z=[G-y(1-u),h])[0]=q+z[0]*b;break;case"less":E=x(G),(z=[m,G+y(1-u)])[1]=q+z[1]*b;break;default:throw new Error(a("1Lz2X,3g,4S,GD,Gg,Jm","alternative",["two-sided","less","greater"].join('", "'),T))}return i(k={},"rejected",E<=u),i(k,"alpha",u),i(k,"pValue",E),i(k,"statistic",G),i(k,"ci",z),i(k,"alternative",T),i(k,"nullValue",q),i(k,"sd",b),i(k,"method","One-sample z-test"),i(k,"print",w),k}export{z as default};
//# sourceMappingURL=index.mjs.map
