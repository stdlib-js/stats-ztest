// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import{isPrimitive as t}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-number@v0.1.1-esm/index.mjs";import{primitives as e}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number-array@v0.1.0-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-typed-array-like@v0.1.0-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-read-only-property@v0.1.1-esm/index.mjs";import{factory as n}from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-normal-cdf@v0.1.0-esm/index.mjs";import{factory as r}from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-normal-quantile@v0.1.1-esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-sqrt@v0.1.1-esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-abs@v0.1.1-esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-mean@v0.1.0-esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/constants-float64-ninf@v0.1.1-esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/constants-float64-pinf@v0.1.1-esm/index.mjs";import{isPrimitive as h}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number@v0.1.1-esm/index.mjs";import v from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.1.0-esm/index.mjs";import{isPrimitive as j}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-string@v0.1.1-esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nan@v0.1.1-esm/index.mjs";import c from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.1.1-esm/index.mjs";import b from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-integer@v0.1.0-esm/index.mjs";import{isPrimitive as f}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@v0.1.1-esm/index.mjs";import g from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-roundn@v0.1.0-esm/index.mjs";function w(t){var e,s,i;if(s=4,e=!0,arguments.length>0){if(!v(t))throw new TypeError(a("invalid argument. First argument must be an object. Value: `%s`.",t));if(c(t,"digits")){if(!b(t.digits))throw new TypeError(a("invalid option. `%s` option must be a positive integer. Option: `%s`.","digits",t.digits));s=t.digits}if(c(t,"decision")){if(!f(t.decision))throw new TypeError(a("invalid option. `%s` option must be a boolean. Option: `%s`.","decision",t.decision));e=t.decision}}switch(i="",i+=this.method,i+="\n\n",i+="Alternative hypothesis: ",i+="True mean is ",this.alternative){case"less":i+="less than ";break;case"greater":i+="greater than ";break;default:i+="not equal to "}return i+=this.nullValue,i+="\n\n",i+="    pValue: "+g(this.pValue,-s)+"\n",i+="    statistic: "+g(this.statistic,-s)+"\n",i+="    "+100*(1-this.alpha)+"% confidence interval: ["+g(this.ci[0],-s)+","+g(this.ci[1],-s)+"]",i+="\n\n",e&&(i+="Test Decision: ",this.rejected?i+="Reject null in favor of alternative at "+100*this.alpha+"% significance level":i+="Fail to reject null in favor of alternative at "+100*this.alpha+"% significance level",i+="\n"),i}var x=n(0,1),y=r(0,1);function E(n,r,b){var f,g,E,T,V,O,k,F,q,P,R;if(!s(n)&&!e(n))throw new TypeError(a("invalid argument. First argument must be a numeric array. Value: `%s`.",n));if(!t(r))throw new TypeError(a("invalid argument. Second argument must be a positive number. Value: `%s`.",r));if(P=n.length,V={},b&&(F=function(t,e){return v(e)?c(e,"alpha")&&(t.alpha=e.alpha,!h(t.alpha)||u(t.alpha))?new TypeError(a("invalid option. `%s` option must be a number. Option: `%s`.","alpha",t.alpha)):c(e,"alternative")&&(t.alternative=e.alternative,!j(t.alternative))?new TypeError(a("invalid option. `%s` option must be a string. Option: `%s`.","alternative",t.alternative)):c(e,"mu")&&(t.mu=e.mu,!h(t.mu)||u(t.mu))?new TypeError(a("invalid option. `%s` option must be a number. Option: `%s`.","mu",t.mu)):null:new TypeError(a("invalid argument. Options argument must be an object. Value: `%s`.",e))}(V,b),F))throw F;if(R=V.mu||0,(g=void 0===V.alpha?.05:V.alpha)<0||g>1)throw new RangeError(a("invalid option. `%s` option must be a number on the interval: [0, 1]. Option: `%f`.","alpha",g));if(P<2)throw new Error(a("invalid argument. First argument must contain at least two elements. Value: `%s`.",n));switch(f=o(r*r/P),O=(m(P,n,1)-R)/f,k=V.alternative||"two-sided"){case"two-sided":T=2*x(-l(O)),(E=[O-y(1-g/2),O+y(1-g/2)])[0]=R+E[0]*f,E[1]=R+E[1]*f;break;case"greater":T=1-x(O),(E=[O-y(1-g),p])[0]=R+E[0]*f;break;case"less":T=x(O),(E=[d,O+y(1-g)])[1]=R+E[1]*f;break;default:throw new Error(a('invalid option. `%s` option must be one of the following: "%s". Option: `%s`.',"alternative",["two-sided","less","greater"].join('", "'),k))}return i(q={},"rejected",T<=g),i(q,"alpha",g),i(q,"pValue",T),i(q,"statistic",O),i(q,"ci",E),i(q,"alternative",k),i(q,"nullValue",R),i(q,"sd",f),i(q,"method","One-sample z-test"),i(q,"print",w),q}export{E as default};
//# sourceMappingURL=index.mjs.map
